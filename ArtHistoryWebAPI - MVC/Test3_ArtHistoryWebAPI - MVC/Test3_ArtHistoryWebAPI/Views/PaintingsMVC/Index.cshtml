@model IEnumerable<Test3_ArtHistory.Models.Painting>

@{
    ViewBag.Title = "Index";
}

<h2>Painting Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <td><strong>Painting</strong></td>
        <th>
            @Html.DisplayNameFor(model => model.Artist.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Movement.Name)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @{
                if (item.imageContent != null && item.imageMimeType.Contains("image"))
                {
                    string imageBase64 = Convert.ToBase64String(item.imageContent);
                    string imageSrc = string.Format("data:" + item.imageMimeType + ";base64,{0}", imageBase64);
                    <img src="@imageSrc" style="max-height: 100px; max-width: 120px" class="img-responsive img-rounded" />
                }
            }<strong>@Html.DisplayFor(modelItem => item.Name)</strong>
        </td>
        <td>
            <strong>@Html.DisplayFor(modelItem => item.Artist.Name)</strong><br />
            Dated: c. @Html.DisplayFor(modelItem => item.Dated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Movement.Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
